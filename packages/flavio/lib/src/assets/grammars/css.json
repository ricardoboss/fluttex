{
  "name": "CSS",
  "version": "1.0.0",
  "fileTypes": [
    "css"
  ],
  "scopeName": "source.css",

  "patterns": [
    {
      "name": "comment.block.css",
      "begin": "/\\*",
      "end": "\\*/"
    },
    {
      "name": "constant.numeric.css",
      "match": "\\b\\d+(\\.\\d+)?(px|em|rem|%)?\\b"
    },
    {
      "name": "constant.color.css",
      "match": "#[0-9a-fA-F]{3,6}\\b"
    },
    {
      "name": "string.quoted.double.css",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.css",
          "match": "\\\\."
        }
      ]
    },
    {
      "name": "string.quoted.single.css",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "name": "constant.character.escape.css",
          "match": "\\\\."
        }
      ]
    },
    {
      "name": "entity.name.tag.css",
      "match": "\\b[a-zA-Z_][-a-zA-Z0-9_]*\\b"
    },
    {
      "name": "entity.other.attribute-name.class.css",
      "match": "\\.[a-zA-Z_][-a-zA-Z0-9_]*\\b"
    },
    {
      "name": "entity.other.attribute-name.id.css",
      "match": "#[a-zA-Z_][-a-zA-Z0-9_]*\\b"
    },
    {
      "name": "entity.other.attribute-name.pseudo-class.css",
      "match": ":[a-zA-Z_][-a-zA-Z0-9_]*\\b"
    },
    {
      "name": "entity.other.attribute-name.pseudo-element.css",
      "match": "::[a-zA-Z_][-a-zA-Z0-9_]*\\b"
    },
    {
      "name": "keyword.control.at-rule.css",
      "match": "@(import|media|font-face|keyframes|supports)\\b"
    },
    {
      "name": "keyword.other.unit.css",
      "match": "\\b(px|em|rem|vh|vw|%)\\b"
    },
    {
      "name": "support.type.property-name.css",
      "match": "\\b(align-content|align-items|align-self|all|animation|background|border|bottom|box-shadow|color|display|flex|font|grid|height|justify-content|left|margin|max-height|max-width|min-height|min-width|opacity|overflow|padding|position|right|text-align|top|width|z-index)\\b"
    },
    {
      "name": "support.constant.property-value.css",
      "match": "\\b(auto|block|flex|grid|hidden|inherit|initial|inline|none|relative|static|absolute|fixed)\\b"
    },
    {
      "name": "punctuation.definition.entity.css",
      "match": "[{}]"
    },
    {
      "name": "punctuation.separator.key-value.css",
      "match": ":"
    },
    {
      "name": "punctuation.separator.property-list.css",
      "match": ";"
    },
    {
      "name": "punctuation.separator.comma.css",
      "match": ","
    }
  ]
}
